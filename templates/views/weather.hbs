<!DOCTYPE html>
<html lang="en">

<head>
    {{>headerlinks}}
</head>

<style>
    @import url("https://fonts.googleapis.com/css2?family=Piazzolla:wght@200;300;400;900&display=swap");

    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: "Piazzolla", "serif";
    }

    :root {
        --main-bg: #1e272e;
        --main-color: #0097e6;
    }

    html {
        font-size: 62.5%;
    }

    body {
        height: 100vh;
        display: flex;
        flex-direction: column;

    }

    .row {
        margin: 0;
    }

    /* .main_menu{
    background-color: var(--main-color);
    
} */

    .navbar {
        color: #fff;
        background-color: var(--main-bg);
        padding: 2rem 0;
    }

    .navbar li {
        margin-left: 2rem;
    }

    .navbar a {
        color: #fff;
        font-size: 1.8rem;
    }

    .navbar a:hover {
        color: var(--main-color);
    }

    .navbar-toggler {
        background: grey !important;
    }

    .fa-snowflake {
        transition: all linear;
        animation: rot 2s linear infinite;
        color: var(--main-color);
    }

    @keyframes rot {
        0% {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }
    }

    /* Main Header */
    .leftside {
        height: 70rem;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: flex-start;
    }

    .leftside p {
        font-size: 2rem;
    }

    .leftside h1 {
        font-size: 4rem;
        margin: 1rem 0 4rem 0;
        text-transform: capitalize;
    }

    .leftside .textClr {
        color: var(--main-color);
    }

    .leftside button {
        border: none;
        padding: 0.8rem 1.8rem;
        font-size: 1.4rem;
        border-radius: 2rem;
        text-transform: uppercase;
        box-shadow: 0 8px 6px -6px #000;
        outline: none;
    }

    .leftside button:hover {
        box-shadow: 0 8px 6px -6px var(--main-color);

    }


    .rightside {
        height: 70rem;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: flex-start;
    }

    /* Footer code */
    footer {
        width: 100%;
        background-color: var(--main-bg);
        margin-top: auto;
    }

    footer p {
        margin: 0;
        text-align: center;
        color: #fff;
        line-height: 5rem;
        font-size: 1.4rem;
    }

    .persimg {
        height: 48rem;
        width: 41rem;
    }

    .rightside figure img {
        /* filter: drop-shadow(0 0.5rem 1rem rgba(0 , 0 ,0, 0.3)); */
        border-radius: 12%;
    }

    /* Responsive */
    @media (max-width: 768px) {
        .leftside {
            height: auto;
            margin: 5rem 0;
        }

        .rightside {
            height: auto;
            margin-top: 3rem;
        }

        .persimg {
            height: 34rem;
            width: 28rem;
        }

        #weathercon {
            left: 6rem;
            height: 55%;
            display: flex;
            position: absolute;
            bottom: 28%;
            justify-content: center;
            align-items: center;
            font-size: 3em;
        }

        .info {
            position: absolute;
            bottom: 1rem;
            width: 100%;
            height: 45%;
            z-index: 4;
        }

        .location {
            /* margin-top: 1.5rem; */
            text-align: center;
            
            font-weight: 800;
            font-size: 3rem;
            margin-bottom: 0px;
        }

        #date {
            text-align: center;
            margin-top: 2.5rem;
            color: #57606f;
            
            font-size: 1.2rem;
            font-weight: 300;
            text-transform: uppercase;
        }

        #tempmin_max {
            text-align: center;
            /* margin-top: 0.3rem; */
            font-weight: 300;
            position: absolute;
            bottom: 0.8rem;
            width: 100%;
            height: 3rem;
            font-size: 1.2rem;
            color: #57606f;
        }

        #temp{
            margin-top: 0rem;
        }
        
        .box{
            width: 83vw;
        }
    }

    * {
        padding: 0;
        margin: 0;
        /* font-family: "Jost", sans-serif; */
        font-family: "Quicksand", sans-serif;
    }

    body {
        background: #f3f2ef;
        display: flex;
        overflow: hidden;
        justify-content: center;
        align-items: center;

            {
                {
                 !-- flex-wrap: wrap;
                --
            }
        }

        height: 100vh;
        width: 100vw;
    }

    .containerr {
        background: #f3f2ef;
        display: flex;
        justify-content: center;
        align-items: center;
        flex-wrap: wrap;
        height: 76vh;
        width: 100vw;
    }

    html,
    body {
        font-size: 62.5%;
        height: 100%;
    }

    html {
        background: #eee;
    }

    .box {
        width: 23vw;
        height: 60vh;
        border-radius: 0.5rem;
        box-shadow: 0 0.2rem 3rem rgba(0, 0, 0, 0.2);
        background: #a5bbdd;
        position: relative;
        overflow: hidden;
        transform: translate3d(0, 0, 0);
        min-width: 20rem;
        min-height: 35rem;
    }

    .wave {
        opacity: 0.3;
        position: absolute;
        top: 120%;
        left: 50%;
        background: white;
        width: 50rem;
        height: 50rem;
        margin-left: -25rem;
        margin-top: -25rem;
        transform-origin: 50% 48%;
        border-radius: 43%;
        animation: drift 3000ms infinite linear;
        z-index: 1;
    }

    .wave.-three {
        animation: drift 5000ms infinite linear;
        z-index: 2 !important;
        opacity: 0.2;
    }

    .wave.-two {
        animation: drift 7000ms infinite linear;
        opacity: 0.1;
        z-index: 3 !important;
    }

    .box:after {
        content: "";
        display: block;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        z-index: 11;
        transform: translate3d(0, 0, 0);
    }

    @keyframes drift {
        from {
            transform: rotate(0deg);
        }

        from {
            transform: rotate(360deg);
        }
    }

    .info {
        position: absolute;
        bottom: 0;
        width: 100%;
        height: 45%;
        z-index: 4;
    }

    .location {
        margin-top: 1.5rem;
        text-align: center;
        font-weight: 800;
        font-size: 3rem;
    }

    .fa-street-view {
        animation: rotates 3s linear infinite alternate;
    }

    @keyframes rotates {
        from {
            transform: translateX(-0.5rem);
        }

        to {
            transform: translateX(0.5rem);
        }
    }

    #date {
        text-align: center;
        margin-top: 0.5rem;
        color: #57606f;
        font-size: 1.2rem;
        font-weight: 300;
        text-transform: uppercase;
    }

    #temp {
        margin-top: 2.5rem;
        text-align: center;
        font-size: 3rem;
    }

    #tempmin_max {
        text-align: center;
        margin-top: 0.3rem;
        font-weight: 300;
        font-size: 1.2rem;
        color: #57606f;
    }

    #weathercon {
        height: 55%;
        display: flex;
        justify-content: center;
        align-items: center;
        font-size: 3em;
    }

    #weathercon .fas {
        font-size: 6rem;
        animation: fas-anime 3s linear infinite alternate;
    }

    @keyframes fas-anime {
        from {
            transform: scale(1.1);
        }

        to {
            transform: scale(1.5);
        }
    }



    @media (max-height: 500px) {
        .box {
            height: 80vh;
        }

        .wave {
            top: 115%;
        }
    }

    body>span {
        width: 100vw;
        text-align: center;
        color: grey;
    }

    .material-symbols-outlined {
        font-variation-settings:
            'FILL' 0,
            'wght' 400,
            'GRAD' 0,
            'opsz' 48;

        position: absolute;
        left: 1em;
        font-weight: bolder;
        /* position: relative; */
        top: 10px;
    }

    #search {
        position: relative;
        /* top: 3em; */
        margin: auto;
        width: 85%;
        /* left: em; */
        /* background-color: transparent; */
    }

    #cityname {
        border-top: hidden;
        border-left: hidden;
        border-right: hidden;

        /* padding-left: 5em; */
        background: transparent;
        margin: auto;
        position: relative;
        /* top: 2em; */
        height: 3em;

        font-size: 20px;
        margin: 0;
        padding: 0;
        width: 95%;
    }

    .fa-search:before {
        content: "\f002";
    }

    #s {
        position: absolute;
        top: 0.8em;

            {
                {
                 !-- text-align: center;
                --
            }
        }
    }

    input {
        text-align: center;
    }
</style>

<body onload="getWeatherInfo()">
    {{>navbar}}
    <!-- Main Header -->
    <div class="containerr">
        <div class="box">
            <span className="material-symbols-outlined"></span>
            <div id="search">
                <i id="s" class="fa fa-search fa-5x" aria-hidden="true"></i>
                <form action="">
                    <input type="text" name="" id="cityname" placeholder="Enter city name " autocomplete="off" />
                </form>
            </div>
            <div class="wave -one"></div>
            <div class="wave -two"></div>
            <div class="wave -three"></div>

            <div id="weathercon">

            </div>

            <div class="info">
                <h2 class="location">
                    <i class="fas fa-street-view" style="color: #fff"></i><span id="location"></span>, <span
                        id="country"></span>
                </h2>
                <p id="date"></p>
                <span>
                    <h2 id="temp"></h2>
                </span>
                <h3 id="tempmin_max">

                </h3>
            </div>
        </div>
    </div>


    <!-- Footer Code -->

    {{>footer}}

</body>

</html>

<script>


    const curDate = document.getElementById("date");
    let weathercon = document.getElementById("weathercon");



    let cityname = 'jabalpur'
    let input = document.getElementById("cityname");
    input.addEventListener("keydown", async (event) => {
        if (event.key === "Enter") {
            event.preventDefault();
            
            cityname = event.target.value;
            console.log(cityname)

            await getWeatherInfo(cityname)
            const value = event.target.value;
            cityname = value
            console.log("Value " + value);

        }
    })

    const getWeatherInfo = async (cityname) => {


        if (window.innerWidth < 670) {
            let d = document.getElementById('s');
            d.classList.remove('fa-5x');
            d.classList.add('fa-3x');
        }

        console.log("Called")
        if (cityname == undefined) {
            cityname = 'jabalpur'
        }
        const url = `https://api.openweathermap.org/data/2.5/weather?q=${cityname}&appid=e2649c1ce668c22a53908e974c1315ed`;
        let data = await fetch(url);
        let parsedData = await data.json();
        console.log(cityname)
        console.log(parsedData);
        if (parsedData.cod == '404') {

            document.getElementById('location').innerHTML = "<h1>Enter Proper city name</h1>";
            document.getElementById('country').innerHTML = "";
        }
        else {
            document.getElementById('location').innerHTML = parsedData.name;
            document.getElementById('country').innerHTML = parsedData.sys.country;
            let T = (parsedData.main.temp - 273.15).toFixed(1);
            document.getElementById('temp').innerHTML = T;
            let min = (parsedData.main.temp_min - 273.15).toFixed(1);
            let max = (parsedData.main.temp_max - 273.15).toFixed(1);
            document.getElementById('tempmin_max').innerHTML = `Max ${max} | Min ${min}`;


            const tempStatus = parsedData.weather[0].main;
            console.log(tempStatus);

            //condition to check sunny or cloudy
            if (tempStatus == "Sunny") {
                weathercon.innerHTML =
                    "<i class='fas  fa-sun' style='color: #eccc68;'></i>";
            } else if (tempStatus == "Clouds") {
                weathercon.innerHTML =
                    "<i class='fas  fa-cloud' style='color: #f1f2f6;'></i>";
            } else if (tempStatus == "Clear") {
                weathercon.innerHTML =
                    "<i class='fas  fa-cloud-sun' style='color: #ffe500;'></i>";
            } else {
                weathercon.innerHTML =
                    "<i class='fas  fa-cloud' style='color:#f1f2f6;'></i>";
            }

        }

        // }

    }
    function convertFtoC(tempF) {
        var tempC = (tempF - 32) * 5 / 9;
        return tempC;
    }

    // getWeatherInfo()
    const getCurrentDay = () => {
        var weekday = new Array(7);
        weekday[0] = "Sunday";
        weekday[1] = "Monday";
        weekday[2] = "Tue";
        weekday[3] = "Wed";
        weekday[4] = "Thursday";
        weekday[5] = "Friday";
        weekday[6] = "Saturday";

        let currentTime = new Date();
        let day = weekday[currentTime.getDay()];
        return day;
    };

    const getCurrentTime = () => {
        var months = [
            "Jan",
            "Feb",
            "Mar",
            "Apr",
            "May",
            "June",
            "July",
            "Aug",
            "Sept",
            "Oct",
            "Nov",
            "Dec",
        ];

        var now = new Date();
        var month = months[now.getMonth() + 1];
        var date = now.getDate();

        let hours = now.getHours();
        let mins = now.getMinutes();

        let periods = "AM";

        if (hours > 11) {
            periods = "PM";
            if (hours > 12) hours -= 12;
        }
        if (mins < 10) {
            mins = "0" + mins;
        }

        return `${month} ${date} | ${hours}:${mins}${periods}`;
    };

    curDate.innerHTML = getCurrentDay() + " | " + getCurrentTime();



    const replaceVal = (tempVal, orgVal) => {
        let temperature = tempVal.replace("{%tempval%}", orgVal.main.temp);
        temperature = temperature.replace("{%tempmin%}", orgVal.main.temp_min);
        temperature = temperature.replace("{%tempmax%}", orgVal.main.temp_max);
        temperature = temperature.replace("{%location%}", orgVal.name);
        temperature = temperature.replace("{%country%}", orgVal.sys.country);
        temperature = temperature.replace("{%tempstatus%}", orgVal.weather[0].main);

        return temperature;
    };
</script>

</html>